name: Build and Deploy to GCP

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: eval
  REGION: us-central1
  # Workload Identity Federation
  WIF_PROVIDER: ${{ secrets.WIF_PROVIDER }}
  WIF_SERVICE_ACCOUNT: ${{ secrets.WIF_SERVICE_ACCOUNT }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      # Authenticate to Google Cloud using Workload Identity Federation
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.WIF_PROVIDER }}
          service_account: ${{ env.WIF_SERVICE_ACCOUNT }}
      
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
      
      - name: Configure Docker to use gcloud as credential helper
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev
      
      # Build and test
      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci
      
      - name: Run linter
        working-directory: ./frontend
        run: npm run lint
      
      - name: Build application
        working-directory: ./frontend
        run: npm run build
        env:
          NODE_ENV: production
      
      # Build and push Docker image to Artifact Registry
      - name: Build Docker image
        run: |
          docker build \
            --tag "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }}" \
            --tag "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }}:latest" \
            ./frontend
      
      - name: Push Docker image
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          docker push "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }}"
          docker push "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }}:latest"
      
      # Deploy to Cloud Run
      - name: Deploy to Cloud Run
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          # Trim newlines from secrets
          NEXT_PUBLIC_STACK_PROJECT_ID=$(echo -n "${{ secrets.NEXT_PUBLIC_STACK_PROJECT_ID }}" | tr -d '\n\r')
          NEXT_PUBLIC_STACK_PUBLISHABLE_CLIENT_KEY=$(echo -n "${{ secrets.NEXT_PUBLIC_STACK_PUBLISHABLE_CLIENT_KEY }}" | tr -d '\n\r')
          STACK_SECRET_SERVER_KEY=$(echo -n "${{ secrets.STACK_SECRET_SERVER_KEY }}" | tr -d '\n\r')
          DATABASE_URL=$(echo -n "${{ secrets.DATABASE_URL }}" | tr -d '\n\r')
          PROLIFIC_API_TOKEN=$(echo -n "${{ secrets.PROLIFIC_API_TOKEN }}" | tr -d '\n\r')
          BASE_URL=$(echo -n "${{ secrets.BASE_URL }}" | tr -d '\n\r')
          
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }}" \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --memory 2Gi \
            --cpu 2 \
            --timeout 300 \
            --max-instances 100 \
            --min-instances 1 \
            --set-env-vars "NODE_ENV=production,DATA_DIR=/data,NEXT_PUBLIC_STACK_PROJECT_ID=${NEXT_PUBLIC_STACK_PROJECT_ID},NEXT_PUBLIC_STACK_PUBLISHABLE_CLIENT_KEY=${NEXT_PUBLIC_STACK_PUBLISHABLE_CLIENT_KEY},STACK_SECRET_SERVER_KEY=${STACK_SECRET_SERVER_KEY},DATABASE_URL=${DATABASE_URL},PROLIFIC_API_TOKEN=${PROLIFIC_API_TOKEN},BASE_URL=${BASE_URL}" \
            --update-labels "commit-sha=${{ github.sha }},managed-by=github-actions"
      
      - name: Display service URL
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} --region ${{ env.REGION }} --format 'value(status.url)')
          echo "Service deployed to: $SERVICE_URL"
          echo "SERVICE_URL=$SERVICE_URL" >> $GITHUB_ENV
      
      # Create deployment summary
      - name: Create deployment summary
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Status**: âœ… Deployed successfully" >> $GITHUB_STEP_SUMMARY
          echo "**Service**: ${{ env.SERVICE_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "**Region**: ${{ env.REGION }}" >> $GITHUB_STEP_SUMMARY
          echo "**URL**: ${{ env.SERVICE_URL }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY